---
- name: 停止kubelet kube-proxy服务
  service: name={{ item }} state=stopped enabled=no
  with_items:
  - kubelet
  - kube-proxy
  tags: stop_svc
  ignore_errors: true
  
- name: 删除kubelet配置
  shell: 'cd {{ k8s_work_dir }}/cert && rm -rf kubelet*; \
         cd {{ k8s_work_dir }}/conf && rm -rf kubelet* kube-proxy*'
  tags: del_con
  ignore_errors: true
  
- name: 创建工作目录
  file: dest={{ k8s_work_dir }}/{{ item }} state=directory
  with_items:
    - bin
    - conf
    - cert
    - logs 
  when: "inventory_hostname in groups['node'] and inventory_hostname not in groups['master']"

- name: 移动k8s node二进制文件
  copy:  src={{ software_dir }}/k8s/{{ item }} dest={{ k8s_work_dir }}/bin mode=u+x
  with_items:
    - kubelet
    - kube-proxy
    - kubectl
  tags: cp_bin
  
- name: 分发 kubeconfig配置文件
  copy: src={{ base_dir }}/ssl/kube.config dest=/root/.kube/config
  when: "inventory_hostname in groups['node'] and inventory_hostname not in groups['master']"

- name: 分发k8s证书
  copy: src={{ base_dir }}/ssl/{{ item }} dest={{ k8s_work_dir }}/cert
  with_items:
    - ca.pem
    - kube-proxy.pem
    - kube-proxy-key.pem
    
- name: 分发k8s配置文件
  template: src={{ item }} dest={{ k8s_work_dir }}/conf/{{ item.split('.')[:-1]|join('.') }}
  with_items:
    - kubelet.conf.j2
    - kubelet-config.yml.j2
    - kube-proxy.conf.j2
    - kube-proxy-config.yml.j2
#    - bootstrap.kubeconfig.j2
#    - kube-proxy.kubeconfig.j2

- name: 分发bootstrap/kube-proxy kubeconfig配置文件
  copy: src={{ base_dir }}/ssl/{{ item }} dest={{ k8s_work_dir }}/conf/{{ item }}
  with_items:
    - bootstrap.kubeconfig
    - kube-proxy.kubeconfig
    
- name: 替换 kubeconfig 的 apiserver 地址
  lineinfile:
    dest: "{{ item }}"
    regexp: "^    server"
    line: "    server: {{ KUBE_APISERVER }}"
  with_items:
  - "/root/.kube/config"
  when: "inventory_hostname in groups['node'] and inventory_hostname not in groups['master']"
  
- name: 分发service文件
  template: src={{ item }} dest=/usr/lib/systemd/system/{{ item.split('.')[:-1]|join('.') }}
  with_items:
    - kubelet.service.j2
    - kube-proxy.service.j2
    
- name: 启动k8s node组件
  systemd: name={{ item }} state=restarted enabled=yes daemon_reload=yes
  with_items:
    - kubelet
    - kube-proxy

# 轮询等待kube-proxy启动完成
- name: 轮询等待kube-proxy启动
  shell: "systemctl status kube-proxy.service|grep Active"
  register: kubeproxy_status
  until: '"running" in kubeproxy_status.stdout'
  retries: 4
  delay: 4
  tags: reload-kube-proxy, upgrade_k8s, restart_node

# 轮询等待kubelet启动完成
- name: 轮询等待kubelet启动
  shell: "systemctl status kubelet.service|grep Active"
  register: kubelet_status
  until: '"running" in kubelet_status.stdout'
  retries: 4
  delay: 4
  tags: reload-kube-proxy, upgrade_k8s, restart_node

- name: 轮询等待node达到Ready状态
  shell: "{{ k8s_work_dir }}/bin/kubectl get node {{ inventory_hostname }}|awk 'NR>1{print $2}'"
  register: node_status
  until: node_status.stdout == "Ready" or node_status.stdout == "Ready,SchedulingDisabled"
  retries: 8 
  delay: 8
  tags: upgrade_k8s, restart_node

- name: 设置node节点role
  shell: "{{ k8s_work_dir }}/bin/kubectl label node {{ inventory_hostname }} kubernetes.io/role=node --overwrite"
  when: "inventory_hostname in groups['node'] and inventory_hostname not in groups['master']"

- name: 设置master节点role
  shell: "{{ k8s_work_dir }}/bin/kubectl label node {{ inventory_hostname }} kubernetes.io/role=master --overwrite"
  when: "inventory_hostname in groups['master']"

- name: 分发预准备镜像
  copy: src={{ software_dir }}/images/pause-amd64_3.2.tar dest={{ k8s_work_dir }}

- name: 导入镜像
  shell: cd {{ k8s_work_dir }} && \
         for image in $(ls *.tar);do docker load < $image;done
