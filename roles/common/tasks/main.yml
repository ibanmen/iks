# 这个剧本在所有节点上运行
- name: 准备离线安装包目录
  file: name={{ tmp_dir }}/soft state=directory
  
- name: 判断是否安装了基础软件
  shell: 'type ipvsadm >/dev/null 2>&1'
  register: soft_info
  ignore_errors: True
  
- block:
  - name: 分发kernel离线包
    copy:
      src: "{{ software_dir }}/kernel"
      dest: "{{ tmp_dir }}/soft"

  - name: 安装kernel_centos7离线包
    shell: 'cd {{ tmp_dir }}/soft/kernel && rpm -Uvh --force --nodeps *.rpm > /tmp/install_kernel.log 2>&1'

  - name: 设置内核启动顺序
    shell: 'grub2-set-default 0 && reboot'
  when:
    - 'ansible_kernel != "5.4.95-1.el7.elrepo.x86_64"'
    - 'ansible_distribution == "CentOS"'
    - 'ansible_distribution_major_version == "7"'
  ignore_errors: true
  
- block:
  - name: 分发basic离线包
    copy:
      src: "{{ software_dir }}/basic"
      dest: "{{ tmp_dir }}/soft"

  - name: 安装basic_centos7离线包
    shell: 'cd {{ tmp_dir }}/soft/basic && rpm -Uvh --force --nodeps *.rpm > /tmp/install_basic.log 2>&1'
  when:
    - 'soft_info is failure'
    - 'ansible_distribution == "CentOS"'
    - 'ansible_distribution_major_version == "7"'
        
- name: 关闭firewalld
  service: name=firewalld state=stopped enabled=no
  ignore_errors: yes

- name: 关闭selinux
  shell: "setenforce 0"
  ignore_errors: yes
  
- name: 关闭selinux
  lineinfile:
    dest: /etc/selinux/config
    regexp: "^SELINUX="
    line: "SELINUX=disabled"
  
- name: 关闭 swapoff 
  shell: swapoff -a
  
- name: 修改 fstab 
  replace:
    path: /etc/fstab
    regexp: '^([/|U].+swap.+)$'
    replace: '#\1'

- name: 拷贝时区
  copy: src=/usr/share/zoneinfo/Asia/Shanghai dest=/etc/localtime

- name: 卸载 postfix
  yum: name=postfix state=absent
  
- name: 卸载ntp
  yum: name=ntp state=absent 
  
- name: ulimit -n 65536
  lineinfile:
    dest: /etc/security/limits.conf
    line: "{{item}}"
  with_items:
    - '* soft nofile 65536'
    - '* hard nofile 131072'
    - '* soft nproc 65536'
    - '* hard nproc 65536'
    - '* soft memlock unlimited'
    - '* hard memlock unlimited'
    
- name: 拷贝ipvs
  copy:
    src: ipvs.modules
    dest: /etc/sysconfig/modules/
    mode: 0755
    
- name: 运行 ipvs.modules
  shell: 'bash /etc/sysconfig/modules/ipvs.modules'
  
- name: 拷贝 kubernetes.conf
  template:
    src: kubernetes.conf.j2
    dest: /etc/sysctl.d/kubernetes.conf
    
- name: sysctl -p kubernetes.conf
  shell: 'sysctl -p /etc/sysctl.d/kubernetes.conf'
  
- name: 复制chrony.conf
  template:
    src: chrony.conf.j2
    dest: /etc/
    
- name: 启动 chrony
  service:
    name: "chronyd"
    state: started
    enabled: yes
    
- name: 添加hosts
  template: 
    src: hosts.j2 
    dest: /etc/hosts

- name: 把SCTP列入内核模块黑名单
  copy: src=sctp.conf dest=/etc/modprobe.d/sctp.conf

- name: 删除原有kubeconfig
  file: path=/root/.kube/config state=absent
  ignore_errors: true

- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:  
    - /root/.kube

- block:
  - name: 安装bash-completion
    yum: name=bash-completion state=installed

  - name: 写入环境变量$PATH 
    lineinfile:
      dest: ~/.bashrc
      state: present
      regexp: 'k8s'
      line: 'export PATH={{ k8s_work_dir }}/bin:$PATH # generated by k8s'
    
  - name: 添加 kubectl 命令自动补全
    lineinfile:
      dest: ~/.bashrc
      state: present
      regexp: 'kubectl completion'
      line: 'source /usr/share/bash-completion/bash_completion
             source <(kubectl completion bash)'
  when: "inventory_hostname in groups['master'] or inventory_hostname in groups['node']" 
